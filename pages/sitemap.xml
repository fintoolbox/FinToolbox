// pages/sitemap.xml.js
// Generates a simple XML sitemap including static routes and blog posts.

export default async function handler(req, res) {
  const host = "https://fintoolbox.com.au";

  // 1) Static routes (add/remove as your site grows)
  const staticPaths = [
    "",                         // /
    "calculators",
    "calculators/tax-calculator",
    "calculators/investment-growth",
    "calculators/mortgage",
    "calculators/age-pension",
    "blog",
    "about",
    "contact",
    "disclaimer",
  ];

  // 2) Blog posts (read from your MDX index)
  // This assumes you already have the helper used elsewhere in your project.
  let blogUrls = [];
  try {
    const { getAllPosts } = await import("@/lib/mdx");
    const posts = getAllPosts(); // [{ slug, frontmatter: { date } }, ...]
    blogUrls = posts.map((p) => ({
      loc: `${host}/blog/${p.slug}`,
      lastmod: (p.frontmatter?.date
        ? new Date(p.frontmatter.date)
        : new Date()
      ).toISOString().split("T")[0],
    }));
  } catch (e) {
    // If MDX helpers aren't available in this context, fall back gracefully
    blogUrls = [];
  }

  // 3) Assemble XML
  const today = new Date().toISOString().split("T")[0];

  const staticXml = staticPaths
    .map((path) => {
      const loc = `${host}/${path}`.replace(/\/+$/, ""); // no trailing slash on root
      return `<url><loc>${loc || host}</loc><lastmod>${today}</lastmod></url>`;
    })
    .join("");

  const blogXml = blogUrls
    .map(
      (u) =>
        `<url><loc>${u.loc}</loc><lastmod>${u.lastmod || today}</lastmod></url>`
    )
    .join("");

  const xml = `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
${staticXml}
${blogXml}
</urlset>`;

  res.setHeader("Content-Type", "application/xml");
  // Cache for 1 day at the edge
  res.setHeader("Cache-Control", "public, max-age=0, s-maxage=86400, stale-while-revalidate=43200");
  res.status(200).send(xml);
}
